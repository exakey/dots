local devicons = {
        Array             = "󰅪 ",
        Boolean           = " ",
        BreakStatement    = "󰙧 ",
        Call              = "󰃷 ",
        CaseStatement     = "󱃙 ",
        Class             = " ",
        Color             = " ",
        Constant          = " ",
        Constructor       = " ",
        ContinueStatement = "→ ",
        Copilot           = " ",
        Declaration       = "󰙠 ",
        Delete            = "󰢤 ",
        DoStatement       = "󰑖 ",
        Enum              = " ",
        EnumMember        = " ",
        Event             = " ",
        Field             = " ",
        File              = " ",
        Folder            = " ",
        ForStatement      = "󰑖 ",
        Function          = " ",
        H1Marker          = "󰉫 ",
        H2Marker          = "󰉬 ",
        H3Marker          = "󰉭 ",
        H4Marker          = "󰉮 ",
        H5Marker          = "󰉯 ",
        H6Marker          = "󰉰 ",
        Identifier        = " ",
        IfStatement       = " ",
        Interface         = " ",
        Keyword           = " ",
        List              = "󰅪 ",
        Log               = " ",
        Lsp               = " ",
        Macro             = " ",
        MarkdownH1        = "󰉫 ",
        MarkdownH2        = "󰉬 ",
        MarkdownH3        = "󰉭 ",
        MarkdownH4        = "󰉮 ",
        MarkdownH5        = "󰉯 ",
        MarkdownH6        = "󰉰 ",
        Method            = " ",
        Module            = " ",
        Namespace         = " ",
        Null              = "󰢤 ",
        Number            = "󰎠 ",
        Object            = " ",
        Operator          = "󰆕 ",
        Package           = " ",
        Pair              = "󰅪 ",
        Property          = " ",
        Reference         = "󰈇 ",
        Regex             = " ",
        Repeat            = "󰑖 ",
        Scope             = " ",
        Snippet           = " ",
        Specifier         = "󰦪 ",
        Statement         = " ",
        String            = "󰉾 ",
        Struct            = " ",
        SwitchStatement   = "󰺟 ",
        Terminal          = " ",
        Text              = " ",
        Type              = " ",
        TypeParameter     = " ",
        Unit              = " ",
        Value             = "󰎠 ",
        Variable          = " ",
        WhileStatement    = "󰑖 ",
}

return {
        "Bekaboo/dropbar.nvim",
        -- enabled      = false,
        lazy         = false,
        dependencies = { "nvim-telescope/telescope-fzf-native.nvim" },
        keys         = { { ",q", function() require("dropbar.api").pick() end, desc = "Toggle dropbar", mode = { "n" } } },
        opts         = {
                bar     = {
                        truncate      = true,
                        pick          = { pivots = "hjklHJKL" },
                        update_events = {
                                win = {
                                        "LspAttach",
                                        "CursorMoved",
                                        "WinEnter",
                                        "WinResized",
                                },
                                buf = {
                                        "LspAttach",
                                        "BufModifiedSet",
                                        "FileChangedShellPost",
                                        "TextChanged",
                                        "ModeChanged",
                                },
                        }
                },
                menu    = {
                        keymaps   = {
                                ["h"] = "<C-w>q",
                                ["l"] = function()
                                        local utils = require("dropbar.utils")
                                        local menu  = utils.menu.get_current()
                                        if not menu then
                                                return
                                        end
                                        local cursor    = vim.api.nvim_win_get_cursor(menu.win)
                                        local component = menu.entries[cursor[1]]:first_clickable(cursor[2])
                                        if component then
                                                menu:click_on(component, nil, 1, "l")
                                        end
                                end,
                        },
                        scrollbar = {
                                enable     = false,
                                background = true
                        }
                },
                sources = {
                        treesitter = {
                                valid_types = {
                                        "File",
                                        "Module",
                                        "Namespace",
                                        "Package",
                                        "Class",
                                        "Method",
                                        "Property",
                                        "Field",
                                        "Constructor",
                                        "Enum",
                                        "Interface",
                                        "Function",
                                        "Variable",
                                        "Constant",
                                        "String",
                                        "Number",
                                        "Boolean",
                                        "Array",
                                        "Object",
                                        "Keyword",
                                        "Null",
                                        "EnumMember",
                                        "Struct",
                                        "Event",
                                        "Operator",
                                        "TypeParameter",
                                }
                        },
                        lsp        = {
                                valid_types = {
                                        "File",
                                        "Module",
                                        "Namespace",
                                        "Package",
                                        "Class",
                                        "Method",
                                        "Property",
                                        "Field",
                                        "Constructor",
                                        "Enum",
                                        "Interface",
                                        "Function",
                                        "Variable",
                                        "Constant",
                                        "String",
                                        "Number",
                                        "Boolean",
                                        "Array",
                                        "Object",
                                        "Keyword",
                                        "Null",
                                        "EnumMember",
                                        "Struct",
                                        "Event",
                                        "Operator",
                                        "TypeParameter",
                                }
                        },
                },
                icons   = {
                        enable = true,
                        ui     = { bar = { separator = " > ", extends = "…" }, menu = { separator = " ", indicator = "󰨓 " } },
                        kinds  = {
                                symbols = require("core.icons").symbol_kinds,
                        },
                },
        },
}
